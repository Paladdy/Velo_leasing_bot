"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –ø–æ–ª—è language –≤ —Ç–∞–±–ª–∏—Ü—É users
"""
import asyncio
from sqlalchemy import text
from database.base import async_session_factory, engine


async def add_language_field():
    """–î–æ–±–∞–≤–ª—è–µ—Ç –ø–æ–ª–µ language –≤ —Ç–∞–±–ª–∏—Ü—É users"""
    
    async with engine.begin() as conn:
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ —É–∂–µ –ø–æ–ª–µ language
        check_query = text("""
            SELECT column_name 
            FROM information_schema.columns 
            WHERE table_name='users' AND column_name='language'
        """)
        
        result = await conn.execute(check_query)
        exists = result.fetchone()
        
        if exists:
            print("‚úÖ –ü–æ–ª–µ 'language' —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –≤ —Ç–∞–±–ª–∏—Ü–µ 'users'")
            return
        
        # –î–æ–±–∞–≤–ª—è–µ–º –ø–æ–ª–µ language
        alter_query = text("""
            ALTER TABLE users 
            ADD COLUMN language VARCHAR(5) NOT NULL DEFAULT 'ru'
        """)
        
        await conn.execute(alter_query)
        print("‚úÖ –ü–æ–ª–µ 'language' —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω–æ –≤ —Ç–∞–±–ª–∏—Ü—É 'users'")


async def main():
    """–ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    try:
        print("üîÑ –ù–∞—á–∞–ª–æ –º–∏–≥—Ä–∞—Ü–∏–∏: –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ –ø–æ–ª—è language...")
        await add_language_field()
        print("‚úÖ –ú–∏–≥—Ä–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ!")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –º–∏–≥—Ä–∞—Ü–∏–∏: {e}")
        raise


if __name__ == "__main__":
    asyncio.run(main())

