#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤ –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
"""
import asyncio
import sys
from pathlib import Path

# –î–æ–±–∞–≤–ª—è–µ–º –∫–æ—Ä–Ω–µ–≤—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –≤ –ø—É—Ç—å
sys.path.insert(0, str(Path(__file__).parent.parent))

from database.base import async_session_factory
from database.models.user import User
from database.models.document import Document
from sqlalchemy import select
from sqlalchemy.orm import selectinload


async def check_documents():
    """–ü—Ä–æ–≤–µ—Ä–∏—Ç—å –¥–æ–∫—É–º–µ–Ω—Ç—ã –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö"""
    
    async with async_session_factory() as session:
        # –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π —Å –¥–æ–∫—É–º–µ–Ω—Ç–∞–º–∏
        result = await session.execute(
            select(User)
            .options(selectinload(User.documents))
            .order_by(User.id)
        )
        users = result.scalars().all()
        
        print(f"{'='*80}")
        print(f"üìä –ü–†–û–í–ï–†–ö–ê –î–û–ö–£–ú–ï–ù–¢–û–í –í –ë–ê–ó–ï –î–ê–ù–ù–´–•")
        print(f"{'='*80}\n")
        
        if not users:
            print("‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã")
            return
        
        for user in users:
            print(f"üë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å ID: {user.id}")
            print(f"   –ò–º—è: {user.full_name}")
            print(f"   Telegram ID: {user.telegram_id}")
            print(f"   –°—Ç–∞—Ç—É—Å: {user.status.value}")
            print(f"   –î–æ–∫—É–º–µ–Ω—Ç–æ–≤: {len(user.documents)}")
            
            if user.documents:
                print(f"\n   üìÑ –î–æ–∫—É–º–µ–Ω—Ç—ã:")
                for doc in user.documents:
                    file_exists = "‚úÖ" if Path(doc.file_path).exists() else "‚ùå"
                    print(f"      ‚Ä¢ ID: {doc.id}")
                    print(f"        –¢–∏–ø: {doc.document_type.value}")
                    print(f"        –°—Ç–∞—Ç—É—Å: {doc.status.value}")
                    print(f"        –ü—É—Ç—å: {doc.file_path}")
                    print(f"        –§–∞–π–ª —Å—É—â–µ—Å—Ç–≤—É–µ—Ç: {file_exists}")
                    if doc.uploaded_at:
                        print(f"        –ó–∞–≥—Ä—É–∂–µ–Ω: {doc.uploaded_at.strftime('%d.%m.%Y %H:%M:%S')}")
                    print()
            else:
                print(f"   ‚ö†Ô∏è  –î–æ–∫—É–º–µ–Ω—Ç–æ–≤ –Ω–µ—Ç\n")
            
            print(f"{'-'*80}\n")


async def check_specific_user(telegram_id: int):
    """–ü—Ä–æ–≤–µ—Ä–∏—Ç—å –¥–æ–∫—É–º–µ–Ω—Ç—ã –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"""
    
    async with async_session_factory() as session:
        result = await session.execute(
            select(User)
            .options(selectinload(User.documents))
            .where(User.telegram_id == telegram_id)
        )
        user = result.scalar_one_or_none()
        
        if not user:
            print(f"‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å Telegram ID {telegram_id} –Ω–µ –Ω–∞–π–¥–µ–Ω")
            return
        
        print(f"{'='*80}")
        print(f"üë§ {user.full_name} (Telegram ID: {telegram_id})")
        print(f"{'='*80}\n")
        print(f"User ID –≤ –ë–î: {user.id}")
        print(f"–°—Ç–∞—Ç—É—Å: {user.status.value}")
        print(f"–†–æ–ª—å: {user.role.value}")
        print(f"–î–æ–∫—É–º–µ–Ω—Ç–æ–≤ –≤ –ë–î: {len(user.documents)}\n")
        
        if user.documents:
            print(f"üìÑ –°–ø–∏—Å–æ–∫ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤:\n")
            for i, doc in enumerate(user.documents, 1):
                file_exists = Path(doc.file_path).exists()
                print(f"{i}. –î–æ–∫—É–º–µ–Ω—Ç ID: {doc.id}")
                print(f"   –¢–∏–ø: {doc.document_type.value}")
                print(f"   –°—Ç–∞—Ç—É—Å: {doc.status.value}")
                print(f"   –ü—É—Ç—å: {doc.file_path}")
                print(f"   –§–∞–π–ª —Å—É—â–µ—Å—Ç–≤—É–µ—Ç: {'‚úÖ –î–∞' if file_exists else '‚ùå –ù–µ—Ç'}")
                if not file_exists:
                    print(f"   ‚ö†Ô∏è  –í–ù–ò–ú–ê–ù–ò–ï: –§–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω –Ω–∞ –¥–∏—Å–∫–µ!")
                if doc.uploaded_at:
                    print(f"   –ó–∞–≥—Ä—É–∂–µ–Ω: {doc.uploaded_at.strftime('%d.%m.%Y %H:%M:%S')}")
                if doc.verified_at:
                    print(f"   –ü—Ä–æ–≤–µ—Ä–µ–Ω: {doc.verified_at.strftime('%d.%m.%Y %H:%M:%S')}")
                print()
        else:
            print("‚ö†Ô∏è  –£ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ù–ï–¢ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤ –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö!\n")
            print("–í–æ–∑–º–æ–∂–Ω—ã–µ –ø—Ä–∏—á–∏–Ω—ã:")
            print("  1. –î–æ–∫—É–º–µ–Ω—Ç—ã –Ω–µ –±—ã–ª–∏ –∑–∞–≥—Ä—É–∂–µ–Ω—ã")
            print("  2. –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏")
            print("  3. –î–æ–∫—É–º–µ–Ω—Ç—ã –±—ã–ª–∏ —É–¥–∞–ª–µ–Ω—ã")


async def main():
    """–ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    if len(sys.argv) > 1:
        try:
            telegram_id = int(sys.argv[1])
            await check_specific_user(telegram_id)
        except ValueError:
            print("‚ùå –û—à–∏–±–∫–∞: Telegram ID –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å —á–∏—Å–ª–æ–º")
            print("–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: python check_documents.py [TELEGRAM_ID]")
    else:
        await check_documents()


if __name__ == "__main__":
    asyncio.run(main())

