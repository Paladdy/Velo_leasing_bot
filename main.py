import asyncio
import logging
from aiogram import Bot, Dispatcher
from aiogram.fsm.storage.memory import MemoryStorage
from aiogram.fsm.storage.redis import RedisStorage
from loguru import logger
import redis.asyncio as redis

from config.settings import settings
from database.base import init_db
from bot.handlers.common.start import router as start_router
from bot.handlers.client.rental import router as rental_router
from bot.handlers.client.profile import router as profile_router
from bot.handlers.client.repair import router as repair_router
from bot.handlers.admin.admin_panel import router as admin_panel_router
from bot.handlers.admin.bike_management import router as bike_management_router
from bot.handlers.admin.document_verification import router as document_verification_router
from bot.handlers.admin.settings_management import router as settings_management_router


async def main():
    """–ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –∑–∞–ø—É—Å–∫–∞ –±–æ—Ç–∞"""
    
    # –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
    logger.add(
        "logs/bot.log",
        rotation="1 day",
        retention="7 days",
        level=settings.log_level,
        format="{time:YYYY-MM-DD HH:mm:ss} | {level} | {message}"
    )
    
    logger.info("üöÄ –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞...")
    
    # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–æ—Ç–∞
    bot = Bot(token=settings.bot_token)
    
    # –í—ã–±–æ—Ä —Ö—Ä–∞–Ω–∏–ª–∏—â–∞ –¥–ª—è FSM —Å–æ—Å—Ç–æ—è–Ω–∏–π
    try:
        # –ü—ã—Ç–∞–µ–º—Å—è –ø–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è –∫ Redis
        redis_client = redis.from_url(settings.redis_url)
        await redis_client.ping()
        storage = RedisStorage(redis_client)
        logger.info("‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ Redis —É—Å–ø–µ—à–Ω–æ")
    except Exception as e:
        # –ï—Å–ª–∏ Redis –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω, –∏—Å–ø–æ–ª—å–∑—É–µ–º –ø–∞–º—è—Ç—å
        logger.warning(f"‚ö†Ô∏è Redis –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω ({e}), –∏—Å–ø–æ–ª—å–∑—É–µ–º MemoryStorage")
        storage = MemoryStorage()
    
    dp = Dispatcher(storage=storage)
    
    # –ú—É–ª—å—Ç–∏—è–∑—ã—á–Ω–æ—Å—Ç—å –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∞ —á–µ—Ä–µ–∑ bot/utils/translations.py (–ø—Ä–æ—Å—Ç—ã–µ JSON –ø–µ—Ä–µ–≤–æ–¥—ã)
    logger.info("‚úÖ –ú—É–ª—å—Ç–∏—è–∑—ã—á–Ω–æ—Å—Ç—å (i18n) –≥–æ—Ç–æ–≤–∞ –∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é")
    
    # –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è —Ä–æ—É—Ç–µ—Ä–æ–≤ –≤ –ø—Ä–∞–≤–∏–ª—å–Ω–æ–º –ø–æ—Ä—è–¥–∫–µ
    # 1. –ö–æ–º–∞–Ω–¥—ã (–≤—ã—Å—à–∏–π –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç - –æ–±—Ä–∞–±–æ—Ç–∫–∞ /start –∏ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è)
    dp.include_router(start_router)
    
    # 2. –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–∏–≤–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ (—Å–ø–µ—Ü–∏—Ñ–∏—á–Ω—ã–µ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏)
    dp.include_router(admin_panel_router)
    dp.include_router(bike_management_router)
    dp.include_router(document_verification_router)
    
    # 3. –ö–ª–∏–µ–Ω—Ç—Å–∫–∏–µ —Ñ—É–Ω–∫—Ü–∏–∏
    dp.include_router(rental_router)
    dp.include_router(profile_router)
    dp.include_router(repair_router)
    
    # 4. –ù–∞—Å—Ç—Ä–æ–π–∫–∏ (–º–æ–≥—É—Ç —Å–æ–¥–µ—Ä–∂–∞—Ç—å —É–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã–µ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏)
    dp.include_router(settings_management_router)
    
    logger.info("‚úÖ –í—Å–µ —Ä–æ—É—Ç–µ—Ä—ã –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã")
    
    try:
        # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
        logger.info("üóÑÔ∏è –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö...")
        await init_db()
        logger.info("‚úÖ –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–∞")
        
        # –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
        logger.info("ü§ñ –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω –∏ –≥–æ—Ç–æ–≤ –∫ —Ä–∞–±–æ—Ç–µ!")
        await dp.start_polling(bot)
        
    except Exception as e:
        logger.error(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ: {e}")
        raise
    finally:
        await bot.session.close()
        if hasattr(storage, 'close'):
            await storage.close()


if __name__ == "__main__":
    try:
        asyncio.run(main())
    except KeyboardInterrupt:
        logger.info("üëã –ë–æ—Ç –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º")
    except Exception as e:
        logger.error(f"üí• –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞: {e}")
        raise 