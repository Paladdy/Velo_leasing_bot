from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton, ReplyKeyboardMarkup, KeyboardButton
from typing import List
from database.models.bike import Bike, BikeStatus
from database.models.user import User
from database.models.document import Document


def get_bike_management_keyboard() -> InlineKeyboardMarkup:
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –≤–µ–ª–æ—Å–∏–ø–µ–¥–∞–º–∏"""
    keyboard = [
        [InlineKeyboardButton(text="üìã –°–ø–∏—Å–æ–∫", callback_data="admin_bikes_list")],
        [
            InlineKeyboardButton(text="üîß –û–±—Å–ª—É–∂–∏–≤–∞–Ω–∏–µ", callback_data="admin_bikes_maintenance"),
            InlineKeyboardButton(text="üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞", callback_data="admin_bikes_stats")
        ],
        [InlineKeyboardButton(text="‚óÄÔ∏è –ù–∞–∑–∞–¥", callback_data="back_to_admin")]
    ]
    return InlineKeyboardMarkup(inline_keyboard=keyboard)


def get_bikes_list_keyboard(bikes: List[Bike], page: int = 0, per_page: int = 5) -> InlineKeyboardMarkup:
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ —Å–æ —Å–ø–∏—Å–∫–æ–º –≤–µ–ª–æ—Å–∏–ø–µ–¥–æ–≤ –¥–ª—è –∞–¥–º–∏–Ω–∞"""
    keyboard = []
    
    start = page * per_page
    end = start + per_page
    bikes_page = bikes[start:end]
    
    for bike in bikes_page:
        status_emoji = {
            BikeStatus.AVAILABLE: "‚úÖ",
            BikeStatus.RENTED: "üö¥‚Äç‚ôÇÔ∏è", 
            BikeStatus.MAINTENANCE: "üîß",
            BikeStatus.BROKEN: "‚ùå"
        }
        
        bike_text = f"{status_emoji.get(bike.status, '‚ùì')} #{bike.number} - {bike.model}"
        keyboard.append([
            InlineKeyboardButton(text=bike_text, callback_data=f"admin_bike_view_{bike.id}")
        ])
    
    # –ü–∞–≥–∏–Ω–∞—Ü–∏—è
    nav_buttons = []
    if page > 0:
        nav_buttons.append(InlineKeyboardButton(text="‚¨ÖÔ∏è", callback_data=f"admin_bikes_page_{page-1}"))
    
    nav_buttons.append(InlineKeyboardButton(text=f"üìÑ {page+1}", callback_data="current_page"))
    
    if end < len(bikes):
        nav_buttons.append(InlineKeyboardButton(text="‚û°Ô∏è", callback_data=f"admin_bikes_page_{page+1}"))
    
    if nav_buttons:
        keyboard.append(nav_buttons)
    
    keyboard.append([InlineKeyboardButton(text="‚óÄÔ∏è –ù–∞–∑–∞–¥", callback_data="admin_bike_management")])
    return InlineKeyboardMarkup(inline_keyboard=keyboard)


def get_bike_actions_keyboard(bike_id: int, current_status: BikeStatus) -> InlineKeyboardMarkup:
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–µ–π—Å—Ç–≤–∏–π —Å –≤–µ–ª–æ—Å–∏–ø–µ–¥–æ–º"""
    keyboard = []
    
    # –î–µ–π—Å—Ç–≤–∏—è –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Å—Ç–∞—Ç—É—Å–∞
    if current_status == BikeStatus.AVAILABLE:
        keyboard.extend([
            [InlineKeyboardButton(text="üîß –û—Ç–ø—Ä–∞–≤–∏—Ç—å –Ω–∞ –æ–±—Å–ª—É–∂–∏–≤–∞–Ω–∏–µ", callback_data=f"bike_set_maintenance_{bike_id}")],
            [InlineKeyboardButton(text="‚ùå –ü–æ–º–µ—Ç–∏—Ç—å –∫–∞–∫ —Å–ª–æ–º–∞–Ω–Ω—ã–π", callback_data=f"bike_set_broken_{bike_id}")]
        ])
    elif current_status == BikeStatus.MAINTENANCE:
        keyboard.extend([
            [InlineKeyboardButton(text="‚úÖ –í–µ—Ä–Ω—É—Ç—å –≤ —Ä–∞–±–æ—Ç—É", callback_data=f"bike_set_available_{bike_id}")],
            [InlineKeyboardButton(text="‚ùå –ü–æ–º–µ—Ç–∏—Ç—å –∫–∞–∫ —Å–ª–æ–º–∞–Ω–Ω—ã–π", callback_data=f"bike_set_broken_{bike_id}")]
        ])
    elif current_status == BikeStatus.BROKEN:
        keyboard.extend([
            [InlineKeyboardButton(text="üîß –û—Ç–ø—Ä–∞–≤–∏—Ç—å –Ω–∞ –æ–±—Å–ª—É–∂–∏–≤–∞–Ω–∏–µ", callback_data=f"bike_set_maintenance_{bike_id}")],
            [InlineKeyboardButton(text="‚úÖ –û—Ç—Ä–µ–º–æ–Ω—Ç–∏—Ä–æ–≤–∞–Ω", callback_data=f"bike_set_available_{bike_id}")]
        ])
    elif current_status == BikeStatus.RENTED:
        keyboard.append([InlineKeyboardButton(text="üèÅ –ó–∞–≤–µ—Ä—à–∏—Ç—å –∞—Ä–µ–Ω–¥—É", callback_data=f"bike_end_rental_{bike_id}")])
    
    # –û–±—â–∏–µ –¥–µ–π—Å—Ç–≤–∏—è
    keyboard.extend([
        [
            InlineKeyboardButton(text="‚úèÔ∏è –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å", callback_data=f"bike_edit_{bike_id}"),
            InlineKeyboardButton(text="üóëÔ∏è –£–¥–∞–ª–∏—Ç—å", callback_data=f"bike_delete_{bike_id}")
        ],
        [InlineKeyboardButton(text="‚óÄÔ∏è –ù–∞–∑–∞–¥ –∫ —Å–ø–∏—Å–∫—É", callback_data="admin_bikes_list")]
    ])
    
    return InlineKeyboardMarkup(inline_keyboard=keyboard)


def get_bike_status_keyboard(bike_id: int) -> InlineKeyboardMarkup:
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –∏–∑–º–µ–Ω–µ–Ω–∏—è —Å—Ç–∞—Ç—É—Å–∞ –≤–µ–ª–æ—Å–∏–ø–µ–¥–∞"""
    keyboard = [
        [InlineKeyboardButton(text="‚úÖ –î–æ—Å—Ç—É–ø–µ–Ω", callback_data=f"bike_status_{bike_id}_available")],
        [InlineKeyboardButton(text="üîß –ù–∞ –æ–±—Å–ª—É–∂–∏–≤–∞–Ω–∏–∏", callback_data=f"bike_status_{bike_id}_maintenance")],
        [InlineKeyboardButton(text="‚ùå –°–ª–æ–º–∞–Ω", callback_data=f"bike_status_{bike_id}_broken")],
        [InlineKeyboardButton(text="‚óÄÔ∏è –û—Ç–º–µ–Ω–∞", callback_data=f"admin_bike_view_{bike_id}")]
    ]
    return InlineKeyboardMarkup(inline_keyboard=keyboard)


def get_document_verification_keyboard(document_id: int, user_id: int) -> InlineKeyboardMarkup:
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤"""
    keyboard = [
        [
            InlineKeyboardButton(text="‚úÖ –û–¥–æ–±—Ä–∏—Ç—å", callback_data=f"doc_approve_{document_id}"),
            InlineKeyboardButton(text="‚ùå –û—Ç–∫–ª–æ–Ω–∏—Ç—å", callback_data=f"doc_reject_{document_id}")
        ],
        [InlineKeyboardButton(text="üîÑ –¢—Ä–µ–±—É–µ—Ç –¥–æ—Ä–∞–±–æ—Ç–∫–∏", callback_data=f"doc_revision_{document_id}")],
        [InlineKeyboardButton(text="‚óÄÔ∏è –ù–∞–∑–∞–¥", callback_data=f"admin_user_docs_{user_id}")]
    ]
    return InlineKeyboardMarkup(inline_keyboard=keyboard) 